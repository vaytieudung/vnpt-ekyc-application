// Lottie - Animation library (simplified implementation)
// This is a minimal implementation for demonstration purposes

class LottiePlayer {
    constructor() {
        this.animations = new Map();
    }

    loadAnimation(params) {
        const { container, renderer = 'svg', loop = true, autoplay = true, path } = params;
        
        const animationId = 'anim_' + Date.now();
        
        // Create a simple loading animation using CSS
        if (container) {
            container.innerHTML = `
                <div class="lottie-loading" style="
                    width: 100%;
                    height: 100%;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                ">
                    <div style="
                        width: 40px;
                        height: 40px;
                        border: 3px solid #f3f3f3;
                        border-top: 3px solid #00d4aa;
                        border-radius: 50%;
                        animation: lottie-spin 1s linear infinite;
                    "></div>
                </div>
                <style>
                    @keyframes lottie-spin {
                        0% { transform: rotate(0deg); }
                        100% { transform: rotate(360deg); }
                    }
                </style>
            `;
        }

        const animation = {
            id: animationId,
            container,
            play: () => console.log('Playing animation:', animationId),
            pause: () => console.log('Pausing animation:', animationId),
            stop: () => console.log('Stopping animation:', animationId),
            destroy: () => {
                if (container) {
                    container.innerHTML = '';
                }
                this.animations.delete(animationId);
            },
            setSpeed: (speed) => console.log('Setting speed:', speed),
            goToAndStop: (frame) => console.log('Go to frame:', frame),
            goToAndPlay: (frame) => console.log('Go to and play frame:', frame)
        };

        this.animations.set(animationId, animation);
        return animation;
    }

    destroy(animationId) {
        const animation = this.animations.get(animationId);
        if (animation) {
            animation.destroy();
        }
    }

    static create() {
        return new LottiePlayer();
    }
}

// Global instance
window.lottie = new LottiePlayer();

// Static methods
window.lottie.loadAnimation = (params) => {
    return window.lottie.loadAnimation(params);
};

// Export for module systems
if (typeof module !== 'undefined' && module.exports) {
    module.exports = LottiePlayer;
}
